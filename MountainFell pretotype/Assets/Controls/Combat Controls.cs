//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Controls/Combat Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CombatControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CombatControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Combat Controls"",
    ""maps"": [
        {
            ""name"": ""Generic"",
            ""id"": ""b2d193db-e7df-4673-8e8a-947930b6c162"",
            ""actions"": [
                {
                    ""name"": ""directions"",
                    ""type"": ""Value"",
                    ""id"": ""45f53543-6163-430a-847f-0350dc4a870a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""rotation"",
                    ""type"": ""Value"",
                    ""id"": ""eee04ff4-7314-4288-a82f-d17c22cdfcd5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Normalize(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""confirm"",
                    ""type"": ""Button"",
                    ""id"": ""6a1e0838-66b0-4b02-86ce-f808fdfe4767"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""cursor"",
                    ""type"": ""Value"",
                    ""id"": ""95ed88b0-78a5-4160-892d-e0a5fb97b435"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""7c6cf93a-87e8-4f79-bc3b-0c45b18f0838"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""directions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f30a7945-3abc-432d-a0a5-f93b3305a7e9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4365f9a4-40f9-45d1-9f21-824972e4cd6d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""89b1a532-5b2f-4880-b499-be154ef6974e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""db499169-2859-49fa-9fc8-2cea164fa149"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""arrows"",
                    ""id"": ""ccbec480-a57b-474a-b510-8ecdf30e55d9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""directions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8dbafe98-badc-472b-99bf-acc1d86226de"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d328c4b5-8bb6-452a-bf30-b48e59333b01"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6dc80701-56ee-4c24-8bfb-6d57441fab93"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bea679dc-b5e3-4a6d-8e5c-ec6f3e88b4f2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4e03aa8a-2eeb-465a-a583-b9dbe6c5a2bf"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""qe"",
                    ""id"": ""97b15859-93d3-486f-8b39-9eee00d0e4df"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8bd14c8f-19b1-460e-83a6-61b2c886dc65"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""37901644-b3dd-48b7-81dc-e98a10d0cf39"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""bumpers"",
                    ""id"": ""72c50f2b-05a9-4fcf-bd10-b0dfcf07e573"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""21c32e33-03c0-4efe-b832-0c5445e0beab"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2db1696a-26e9-423a-b671-4c9bb613fd40"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b2e83df2-cf68-4ad7-8517-1357aec92a6c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95e6fff5-8c57-459b-ad0d-fb3496b674a7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c622f2da-8b0c-431c-9f4d-de80caeb1022"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""keyboard mouse"",
                    ""action"": ""cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""right stick"",
                    ""id"": ""6e3e2f50-1ae4-4349-92e7-2dfe552842a7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""cursor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e879eb0e-e1ef-466c-b246-599bfa644444"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d2333740-88ac-4cd5-be81-bc1e0c4dbfb2"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f697922-107d-468a-a832-22ee42125c5e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b5a6d6a4-1b03-479e-bf8f-1cea43876f19"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""gamepad"",
                    ""action"": ""cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""keyboard mouse"",
            ""bindingGroup"": ""keyboard mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""gamepad"",
            ""bindingGroup"": ""gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Generic
        m_Generic = asset.FindActionMap("Generic", throwIfNotFound: true);
        m_Generic_directions = m_Generic.FindAction("directions", throwIfNotFound: true);
        m_Generic_rotation = m_Generic.FindAction("rotation", throwIfNotFound: true);
        m_Generic_confirm = m_Generic.FindAction("confirm", throwIfNotFound: true);
        m_Generic_cursor = m_Generic.FindAction("cursor", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Generic
    private readonly InputActionMap m_Generic;
    private IGenericActions m_GenericActionsCallbackInterface;
    private readonly InputAction m_Generic_directions;
    private readonly InputAction m_Generic_rotation;
    private readonly InputAction m_Generic_confirm;
    private readonly InputAction m_Generic_cursor;
    public struct GenericActions
    {
        private @CombatControls m_Wrapper;
        public GenericActions(@CombatControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @directions => m_Wrapper.m_Generic_directions;
        public InputAction @rotation => m_Wrapper.m_Generic_rotation;
        public InputAction @confirm => m_Wrapper.m_Generic_confirm;
        public InputAction @cursor => m_Wrapper.m_Generic_cursor;
        public InputActionMap Get() { return m_Wrapper.m_Generic; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GenericActions set) { return set.Get(); }
        public void SetCallbacks(IGenericActions instance)
        {
            if (m_Wrapper.m_GenericActionsCallbackInterface != null)
            {
                @directions.started -= m_Wrapper.m_GenericActionsCallbackInterface.OnDirections;
                @directions.performed -= m_Wrapper.m_GenericActionsCallbackInterface.OnDirections;
                @directions.canceled -= m_Wrapper.m_GenericActionsCallbackInterface.OnDirections;
                @rotation.started -= m_Wrapper.m_GenericActionsCallbackInterface.OnRotation;
                @rotation.performed -= m_Wrapper.m_GenericActionsCallbackInterface.OnRotation;
                @rotation.canceled -= m_Wrapper.m_GenericActionsCallbackInterface.OnRotation;
                @confirm.started -= m_Wrapper.m_GenericActionsCallbackInterface.OnConfirm;
                @confirm.performed -= m_Wrapper.m_GenericActionsCallbackInterface.OnConfirm;
                @confirm.canceled -= m_Wrapper.m_GenericActionsCallbackInterface.OnConfirm;
                @cursor.started -= m_Wrapper.m_GenericActionsCallbackInterface.OnCursor;
                @cursor.performed -= m_Wrapper.m_GenericActionsCallbackInterface.OnCursor;
                @cursor.canceled -= m_Wrapper.m_GenericActionsCallbackInterface.OnCursor;
            }
            m_Wrapper.m_GenericActionsCallbackInterface = instance;
            if (instance != null)
            {
                @directions.started += instance.OnDirections;
                @directions.performed += instance.OnDirections;
                @directions.canceled += instance.OnDirections;
                @rotation.started += instance.OnRotation;
                @rotation.performed += instance.OnRotation;
                @rotation.canceled += instance.OnRotation;
                @confirm.started += instance.OnConfirm;
                @confirm.performed += instance.OnConfirm;
                @confirm.canceled += instance.OnConfirm;
                @cursor.started += instance.OnCursor;
                @cursor.performed += instance.OnCursor;
                @cursor.canceled += instance.OnCursor;
            }
        }
    }
    public GenericActions @Generic => new GenericActions(this);
    private int m_keyboardmouseSchemeIndex = -1;
    public InputControlScheme keyboardmouseScheme
    {
        get
        {
            if (m_keyboardmouseSchemeIndex == -1) m_keyboardmouseSchemeIndex = asset.FindControlSchemeIndex("keyboard mouse");
            return asset.controlSchemes[m_keyboardmouseSchemeIndex];
        }
    }
    private int m_gamepadSchemeIndex = -1;
    public InputControlScheme gamepadScheme
    {
        get
        {
            if (m_gamepadSchemeIndex == -1) m_gamepadSchemeIndex = asset.FindControlSchemeIndex("gamepad");
            return asset.controlSchemes[m_gamepadSchemeIndex];
        }
    }
    public interface IGenericActions
    {
        void OnDirections(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
    }
}
